{"version":3,"sources":["Components/Fetch.js","Components/Search.js","Components/Graph.js","Components/PieChart.js","Components/Desc.js","Components/Tweets.js","Components/News.js","Components/Shareholders.js","Components/Investors.js","Components/RightSide.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","card","height","width","backgroundColor","padding","marginTop","marginRight","marginLeft","color","borderRadius","fontFamily","cursor","Fetch","props","term","classes","React","useState","setStock","useSWR","data","error","list","content","map","x","index","key","className","onClick","Symbol","onClickStock","console","log","search","flex","searchContainer","background","minWidth","wrapper","display","borderBottomWidth","borderColor","borderStyle","searchButton","Search","onChangeTerm","changeSearch","TextField","placeholder","variant","value","onChange","text","target","toUpperCase","stock","graph","margin","Graph","dates","state","options","chart","type","stacked","zoom","enabled","autoScaleYaxis","toolbar","autoSelected","dataLabels","markers","size","yaxis","labels","formatter","val","toFixed","title","xaxis","theme","monochrome","shadeTo","shadeIntensity","series","name","filteredPercentages","scarper","percentageShares","filter","share","percent","percentages","parseInt","names","responsive","breakpoint","legend","position","container","Desc","desc","Tweets","tweetData","tweets","sentiment","averageWeighedPolarity","negativeTweetsCount","neutralTweetsCount","positiveTweetsCount","urls","textDecoration","News","List","news","undefined","polarity","ListItem","alignItems","ListItemText","primary","href","url","secondary","compound","Divider","component","Shareholders","topMutualFunds","stake","Investors","topInvestors","rightSide","overflowY","descTweetWrapper","flexDirection","investorsShareWrapper","loading","override","css","RightSide","style","justifyContent","status","PieChart","App","setTerm","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","fetcher","fetch","then","res","json","shouldRetryOnError","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6eed5df0.chunk.js","sourcesContent":["import React from \"react\";\nimport useSWR from \"swr\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  card: {\n    height: 48,\n    width: \"`100%-20px`\",\n    backgroundColor: \"rgba(0,0,0,0.2)\",\n    padding: \"15px 0 0 35px\",\n    marginTop: 10,\n    marginRight: 10,\n    marginLeft: 10,\n    color: \"white\",\n    borderRadius: 5,\n    fontFamily: \"Tahoma, Geneva, sans-serif\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n});\n\nexport default function Fetch(props) {\n  const term = props.term;\n  const classes = useStyles();\n  const [stock, setStock] = React.useState(\"\");\n  const { data, error } = useSWR(\"/search/\" + term);\n\n  if (error) return \"Nothing Found\";\n\n  if (!data) return \"Loading......\";\n\n  let list = data.content;\n  return (\n    <div>\n      {list.map((x, index) => (\n        <div\n          key={index}\n          className={classes.card}\n          onClick={() => {\n            setStock(x.Symbol);\n            props.onClickStock(x.Symbol);\n            console.log(x.Symbol);\n          }}\n        >\n          {x.Symbol}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { TextField} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Fetch from \"./Fetch\"\n\nconst useStyles = makeStyles({\n  search: {\n    flex: 5,\n    marginTop:25,\n\n  },\n  searchContainer: {\n    background: \"linear-gradient(#16EF9E, #5C79EF)\",\n    width: \"100%\",\n    height: \"100vh\",\n    flex: 1,\n    minWidth: 270,\n\n  },\n  wrapper: {\n    display: \"flex\",\n    height: \"10vh\",\n    background: \"transparent\",\n    borderBottomWidth: 3,\n    borderColor:\"#5C79EF\",\n    borderStyle: \"none none solid none\"\n  },\n  searchButton: {\n    marginTop: 30,\n    flex: 1,\n\n  },\n});\nexport default function Search({onChangeTerm}) {\n  const [search, changeSearch] = React.useState(\"\");\n  const classes = useStyles();\n\n  return (\n    <div className={classes.searchContainer}>\n      <div className={classes.wrapper}>\n        <SearchIcon className={classes.searchButton} />\n        <TextField\n          className={classes.search}\n          placeholder=\"NASDAQ Symbol\"\n          variant=\"standard\"\n          value={search}\n          onChange={ (text) => {\n            changeSearch(text.target.value.toUpperCase());\n          }}\n        />\n      </div>\n      {search !== \"\" ?  <Fetch onClickStock={(stock=>onChangeTerm(stock))} term={search}/>: \"\"}\n\n    </div>\n  );\n}\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  graph: {\n    width: \"`100%-20`\",\n    height: 400,\n    backgroundColor: \"white\",\n    margin: \"10px 10px 0px 10px\",\n    borderRadius: 10,\n    padding: \"5px 0px 0px 10px\",\n  },\n});\n\nexport default function Graph(props) {\n  const classes = useStyles();\n  let dates = props.data[\"closing price\"].content;\n  const state = {\n    options: {\n      chart: {\n        type: \"area\",\n        stacked: false,\n        height: 350,\n        zoom: {\n          type: \"x\",\n          enabled: true,\n          autoScaleYaxis: true,\n        },\n        toolbar: {\n          autoSelected: \"zoom\",\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      markers: {\n        size: 0,\n      },\n\n      yaxis: {\n        labels: {\n          formatter: function (val) {\n            return val.toFixed(0);\n          },\n        },\n        title: {\n          text: \"Price\",\n        },\n      },\n      xaxis: {\n        type: \"datetime\",\n      },\n      theme: {\n        monochrome: {\n          enabled: true,\n          color: \"#30C2BC\",\n          shadeTo: \"light\",\n          shadeIntensity: 1,\n        },\n      },\n    },\n\n    series: [\n      {\n        name: props.data[\"closing price\"].stock,\n        data: dates,\n      },\n    ],\n  };\n  return (\n    <div className={classes.graph}>\n      <Chart\n        options={state.options}\n        series={state.series}\n        type=\"area\"\n        height={350}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\nexport default function (props) {\n  const shares = props.data.scarper.percentageShares;\n  const filteredPercentages = shares.filter(share => share.percent !== \"\");\n  const percentages = filteredPercentages.map((x) =>  parseInt(x.percent));\n  const names = filteredPercentages.map((x, index) => x.name);\n  console.log(props.data);\n  const state = {\n    series: percentages,\n    options: {\n      chart: {\n        width: 380,\n        type: \"pie\",\n      },\n      labels: names,\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200,\n            },\n            legend: {\n              position: \"bottom\",\n            },\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div>\n      <Chart\n        options={state.options}\n        series={state.series}\n        type=\"pie\"\n        height={350}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    container:{\n        backgroundColor:\"white\",\n        margin: \"10px 10px 10px 10px\",\n        padding:\"10px 5px 10px 10px\",\n        flex:1,\n        fontFamily:\"Tahoma, Geneva, sans-serif\",\n        color:\"black\",\n        borderRadius:10,\n\n    }\n});\n\nexport default function Desc(props){\n    const classes = useStyles();\n    return(<div className={classes.container}><h1>About</h1>{props.data.scarper.desc}</div>)\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  container: {\n      fontFamily:\"Tahoma, Geneva, sans-serif\",\n      backgroundColor:\"white\",\n      margin: \"10px 10px 10px 10px\",\n      padding:\"10px 5px 10px 10px\",\n      flex:1,\n      color:\"black\",\n      borderRadius:10,\n      height:350\n  },\n});\n\nexport default function Tweets(props) {\n  const tweetData = props.data.tweets.content.data.sentiment;\nconst classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <h1>Tweet sentiment</h1>\n      <p>Weighed Polarity: {tweetData.averageWeighedPolarity}</p>\n      <p>Negative Tweets : {tweetData.negativeTweetsCount}</p>\n        <p>Neutral Tweets: {tweetData.neutralTweetsCount}</p>\n        <p>Positive Tweets : {tweetData.positiveTweetsCount}</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst useStyles = makeStyles({\n  container: {\n    fontFamily:\"Tahoma, Geneva, sans-serif\",\n    width: \"`100%-20px`\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: \"10px 5px 10px 10px\",\n    margin: \"10px 10px 10px 10px\",\n  },\n  urls: {\n    textDecoration: \"none\",\n    color: \"#597EEC\",\n  },\n});\nexport default function News(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <h1>News</h1>\n      <List>\n        {props.data.news.content.map((x, index) => {\n          if (x.polarity!==undefined){\n          return (\n            <div key={index}>\n              <ListItem alignItems=\"flex-start\">\n                <ListItemText\n                  primary={\n                    <a className={classes.urls} href={x.url}>\n                      {x.title}\n                    </a>\n                  }\n                  secondary={\"Sentiment score: \" + x.polarity.compound}\n                />\n              </ListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n            </div>\n          );}\n          else{\n            return(<></>)\n          }\n        })}\n      </List>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst useStyles = makeStyles({\n   container:{\n       fontFamily:\"Tahoma, Geneva, sans-serif\",\n       flex:1,\n       backgroundColor: \"white\",\n       borderRadius: 10,\n       padding: \"10px 5px 10px 10px\",\n       margin: \"10px 10px 10px 10px\"\n   }\n});\n\nexport default function Shareholders(props){\n    const classes = useStyles();\n    return(<div className={classes.container}>\n        <h1>Top 10 Mutual Funds</h1>\n        <List>\n        {props.data.scarper.topMutualFunds.map((x,index)=>(<ListItem key={index} alignItems=\"flex-start\">\n            <ListItemText\n\n                primary={x.name}\n                secondary={x.stake}\n\n            />\n        </ListItem>))}\n        </List>\n    </div>)\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst useStyles = makeStyles({\n  container: {\n    flex:1,\n      fontFamily:\"Tahoma, Geneva, sans-serif\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: \"10px 5px 10px 10px\",\n    margin: \"10px 10px 10px 10px\",\n  },\n});\n\nexport default function Investors(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <h1>Top 10 Investors</h1>\n      <List>\n        {props.data.scarper.topInvestors.map((x,index) => (\n          <ListItem key={index} alignItems=\"flex-start\">\n            <ListItemText primary={x.name} secondary={x.stake} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Graph from \"./Graph\";\nimport PieChart from \"./PieChart\";\nimport Desc from \"./Desc\";\nimport Tweets from \"./Tweets\";\nimport News from \"./News\";\nimport Shareholders from \"./Shareholders\";\nimport Investors from \"./Investors\";\nimport useSWR from \"swr\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { css } from \"@emotion/core\";\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\n\nconst useStyles = makeStyles({\n  rightSide: {\n    padding: 10,\n    height: \"100vh\",\n    overflowY: \"auto\",\n    backgroundColor: \"light gray\",\n  },\n  descTweetWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    [\"@media screen and (max-width: 700px)\"]: {\n      flexDirection: \"column\",\n    },\n  },\n  investorsShareWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  loading: { marginTop: \"30%\" },\n});\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport default function RightSide(props) {\n  const classes = useStyles();\n  const { data, error } = useSWR(\"/allData/\" + props.term);\n\n  if (error) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {\" \"}\n        No Information found for this stock\n      </div>\n    );\n  }\n  if (!data) {\n    return (\n      <div className={classes.loading}>\n        <ClimbingBoxLoader\n          css={override}\n          size={50}\n          color={\"#30C2BC\"}\n          loading={true}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.rightSide}>\n      <h1>{data[\"closing price\"].stock}</h1>\n      <Graph data={data} />\n      <div className={classes.descTweetWrapper}>\n        {data.scarper.status !== \"error\" ? <Desc data={data} /> : \"\"}\n        <Tweets data={data} />\n      </div>\n      {data.news.status !== \"error\" ? <News data={data} /> : \"\"}\n      {data.scarper.status !== \"error\" ? <PieChart data={data} /> : \"\"}\n      {data.scarper.status !== \"error\" ? (\n        <div className={classes.investorsShareWrapper}>\n          <Shareholders data={data} />\n          <Investors data={data} />\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Search from \"./Components/Search\";\nimport RightSide from \"./Components/RightSide\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n\nfunction App() {\n  const [term, setTerm] = useState(\"\");\n  return (\n    <div>\n      <CssBaseline />\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Search onChangeTerm={(term) => setTerm(term)} />\n        {term !== \"\" ? (\n          <div style={{ flex: 3 }}>\n            <RightSide term={term} />\n          </div>\n        ) : (\n            <div style={{ flex: 3,display:'flex', justifyContent:\"center\", alignItems:\"center\"}}>\n                Choose a stock to display data\n            </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { SWRConfig } from \"swr\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SWRConfig\n      value={{\n        fetcher: (url) =>\n          fetch(\"https://stonks108.herokuapp.com/\" + url).then((res) =>\n            res.json()\n          ),\n        shouldRetryOnError: false,\n      }}\n    >\n      <App />\n    </SWRConfig>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}